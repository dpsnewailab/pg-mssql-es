input {
    jdbc {
        # Postgres jdbc connection string to our database, mydb
        # set to timescale
        jdbc_connection_string => "jdbc:postgresql://postgres:5432/sa"
        # The user we wish to execute our statement as
        jdbc_user => "sa"
        # remember new password
        jdbc_password => "th!sIsVeryHardPasswodr"
        jdbc_validate_connection => true
        # The path to our downloaded jdbc driver
        jdbc_driver_library => "/usr/share/logstash/driver/postgresql-42.2.10.jre7.jar"
        # The name of the driver class for Postgresql
        jdbc_driver_class => "org.postgresql.Driver"
        # our query
        jdbc_default_timezone => "Asia/Ho_Chi_Minh"
        tracking_column => "ts"
	    use_column_value => true
	    tracking_column_type => "numeric"
	    # to update only new rows, add the following statement:
	    # WHERE (date_part('epoch', updated)::int > :sql_last_value AND updated < NOW())
        statement => "
            SELECT date_part('epoch', updated)::int as ts,
                   id,
                   data->>'name' AS name,
                   data->>'age' AS age
            FROM public.my_pg_table
	        ORDER BY updated ASC
        "
        # scheduler to run forever
        #schedule => "* * * * *"
    }
}

output {
    stdout { codec => json }
    jdbc {
        connection_string => "jdbc:sqlserver://mssql:1433;databaseName=sa;user=sa;password=th!sIsVeryHardPasswodr"
        driver_jar_path => "/usr/share/logstash/driver/mssql-jdbc-6.4.0.jre7.jar"
        statement => [
            "INSERT INTO my_ms_table(name, age) VALUES(?, ?)", "%{name}", "%{age}"
        ]
    }
}
